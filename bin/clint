#!/usr/bin/env ruby

require 'clint_eastwood'
require 'rubygems'
require 'reek/cli/application'
require_relative '../lib/better_reek.rb'

lint_directory = ARGV[0] || File.expand_path('.')

gem_path = File.expand_path(File.dirname(__FILE__))
config_path = File.join(gem_path, '../config')

user_rubocop_config = File.join(lint_directory, 'config/rubocop.yml')
user_reek_config = File.join(lint_directory, 'config/reek.yml')
default_rubocop_config = File.join(config_path, 'rubocop.yml')
default_reek_config = File.join(config_path, 'reek.yml')



rubocop_config = File.exist?(user_rubocop_config) ? user_rubocop_config : default_rubocop_config
reek_config = File.exist?(user_reek_config) ? user_reek_config : default_reek_config

puts
puts '----------------------------------------------------------------'
puts '----------------------------------------------------------------'
puts 'Running rubocop'
puts 
puts "Using config: #{rubocop_config}" if user_rubocop_config == rubocop_config
puts "Using default config" if default_rubocop_config == rubocop_config

puts '----------------------------------------------------------------'
puts '----------------------------------------------------------------'
puts


system "bundle exec rubocop --rails --config #{rubocop_config} #{lint_directory}/app #{lint_directory}/lib #{lint_directory}/config #{lint_directory}/spec"

puts
puts '----------------------------------------------------------------'
puts '----------------------------------------------------------------'
puts 'Running rails_best_practices'
puts '----------------------------------------------------------------'
puts '----------------------------------------------------------------'
puts

system 'bundle exec rails_best_practices #{lint_directory}'

puts
puts '----------------------------------------------------------------'
puts '----------------------------------------------------------------'
puts 'Running reek'
puts 
puts "Using config: #{reek_config}" if user_reek_config == reek_config
puts "Using default config" if default_reek_config == reek_config
puts '----------------------------------------------------------------'
puts '----------------------------------------------------------------'
puts

Reek::Cli::Application.new(["#{lint_directory}/app", "#{lint_directory}/lib", "#{lint_directory}/config", "#{lint_directory}/spec", '--config', "#{reek_config}"]).execute()
